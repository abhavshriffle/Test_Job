c
train.update(line_id: nil)
train.line_id
train.line__id
train.line_name
train.update(line_name: nil)
train
train.update(line_name: nil)
train.line_name
c
train.line_name
train.update(line_name: nil)
train.line_name
train.update(line_name: nil)
train
c
train
c
train
c
c!
train
c
c!
line
line.update(status: 0)
c!
line_status.update(status: 'busy')
c!
line_status.status
n
@train.present?
 line_status.status
c!
line_status.status
line_status.update(status: 0)
line_status.status
c!
n
c!
line_booking
n
Booking.find_by(line_name: params[:line_name])
c!
@parcel_owner = ParcelOwner.find_by(id: params[:parcel_owner_id])
c
ParcelOwner.find_by(id: params(:parcel_owner_id))
c!
!
c!
valid_attributes
c!
valid_attributes
valid_attributes,
c!
valid_attributes
c!
c
params
params:
c
@train = Train.find_by(id: params[:train_id])
c
@train = Train.find_by(id: params[:train_id])
c
\c
@train.update(status: true)
@train = Train.find_by(id: params[:train_id])
c!
c
c!
train_id
c!
c
c!
train_id
c!
c
TrainUnavailableWorker.perform_in(1.seconds, @train.id)
c
train_id
c
train_id
c
train_id
c
@train
train
train.id
train_id
c
n
TrainUnavailableWorker.perform_at(@train.time.to_i)
c
train_id
c
train_id
c
TrainUnavailableWorker.perform_at(@train.time.to_i, 1)
@train
@train_id
train_id
continue
c
n
update(time: departure_time + duration.to_i.seconds)
c
 TrainUnavailableWorker.perform_at(departure_time.to_i, id, duration.to_i.seconds)
n
update(time: departure_time + duration.to_i.seconds)
duration
c
n
 @train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
n
c
 TrainUnavailableWorker.perform_at(departure_time.to_i, id, duration.to_i.seconds)
n
@train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
@train.mark_as_unavailable_until_departure_async(1.minutes.to_i, @train_id)
@train.mark_as_unavailable_until_departure_async(1.minutes.to_i, train_id)
@train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
n
 @train = Train.find_by(id: params[:train_id])
c
 def perform(train_id)
c
n
c
@train = Train.find_by(id: params[:train_id])
c
train = Train.find(:train_id)
train = Train.find(:train.id)
train = Train.find(:train_id)
train = Train.find_by(id: params[:train_id])
Train.all
train = Train.find(:train.id)
train = Train.find_by(id: train.id)
train = Train.find_by(id: train_id)
train = Train.find_by(id: params[:train_id])
c
@train = Train.find_by(id: params[:train_id])
c
@train = Train.find_by(id: params[:train_id])
c
n
 time ? Time.parse(time) : Time.current
time ? Time.parse(time)
n
update(time: departure_time + duration.to_i.seconds)
c
 @train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
n
 @train.present? && @train.status
n
@train.update(status: true)
n
 @train = Train.find_by(id: params[:train_id])
c
booking_params
c
@train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
n
TrainUnavailableWorker.perform_at(departure_time.to_i, id, duration.to_i.seconds.to_i)
n
 @train.mark_as_unavailable_until_departure_async(1.minutes.to_i)
n
@train.present? && @train.status
n
 @train.update(status: true)
n
 @train = Train.find_by(id: params[:train_id])
n
c
n
@train.mark_as_unavailable_until_departure_async(1.hour.to_i)
n
@train.present? && @train.status
n
 @train.update(status: true)
n
@train = Train.find_by(id: params[:train_id])
c
@train.mark_as_unavailable_until_departure_async(1.hour.to_i)
n
@train = Train.find_by(id: params[:train_id])
c
@train.mark_as_unavailable_until_departure_async(1.hours)
n
@train = Train.find_by(id: params[:train_id])
c
@train.mark_as_unavailable_until_departure_async(3.hours)
n
 @train = Train.find_by(id: params[:train_id])
c
n
c
@train.mark_as_unavailable_until_departure_async("3.hours")
@train.mark_as_unavailable_until_departure_async
@train.mark_as_unavailable_until_departure_async(3.hours)
@train
n
@train = Train.find_by(id: params[:train_id])
c
@train.mark_as_unavailable_until_departure_async(1.minutes)
@train.mark_as_unavailable_until_departure_async
@train.mark_as_unavailable_until_departure_async(3.hours)
n
@train.present? && @train.status
n
@train = Train.find_by(id: params[:train_id])
c
n
nn
TrainUnavailableWorker.perform_at
TrainUnavailableWorker.perform_at(departure_time, id, duration)
TrainUnavailableWorker
n
@train.present? && @train.status
n
 @train.update(status: true)
n
@train = Train.find_by(id: params[:train_id])
c
OfferStatusUpdaterWorker.perform_async
c
n
@train.update(status: true)
n
@train = Train.find_by(id: params[:train_id])
c
 @train.mark_as_unavailable_until_departure_async
 @train.mark_as_unavailable_until_departure_async("3.hours")
n
c
@train.mark_as_unavailable_until_departure_async
mark_as_unavailable_until_departure_async
 @train
@train.mark_as_unavailable_until_departure_async
n
@train.present? && @train.status
n
@train.update(status: true)
n
@train = Train.find_by(id: params[:train_id])
c
@booking.save
n
 @booking = Booking.new(booking_params)
c
@train.status
@train.present?
 @train.present? && @train.status
c
 @booking = Booking.find(params[:id])
c
